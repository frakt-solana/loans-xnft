{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { map, sum } from 'lodash';\nimport { useSolanaWallet } from \"./useWallet\";\nexport var useMaxBorrowValue = function useMaxBorrowValue() {\n  var _useSolanaWallet = useSolanaWallet(),\n    publicKey = _useSolanaWallet.publicKey;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    maxBorrowValue = _useState4[0],\n    setMaxBorrowValue = _useState4[1];\n  useEffect(function () {\n    ;\n    _asyncToGenerator(function* () {\n      try {\n        setIsLoading(true);\n        var walletNfts = yield fetchWalletBorrowNfts({\n          walletPublicKey: publicKey,\n          limit: 1000,\n          skip: 0\n        });\n        var _maxBorrowValue = sum(map(walletNfts, function (_ref2) {\n          var maxLoanValue = _ref2.maxLoanValue;\n          return maxLoanValue;\n        })) / 1e9;\n        setMaxBorrowValue(_maxBorrowValue);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n  return {\n    maxBorrowValue: maxBorrowValue || null,\n    isLoading: isLoading\n  };\n};\nexport var fetchWalletBorrowNfts = function () {\n  var _ref4 = _asyncToGenerator(function* (_ref3) {\n    var walletPublicKey = _ref3.walletPublicKey,\n      limit = _ref3.limit,\n      skip = _ref3.skip;\n    var result = yield (yield fetch(\"https://api.frakt.xyz/nft/meta2/\" + (walletPublicKey == null ? void 0 : walletPublicKey.toBase58()) + \"?limit=\" + limit + \"&skip=\" + skip)).json();\n    return result;\n  });\n  return function fetchWalletBorrowNfts(_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["useEffect","useState","map","sum","useSolanaWallet","useMaxBorrowValue","_useSolanaWallet","publicKey","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","maxBorrowValue","setMaxBorrowValue","_asyncToGenerator","walletNfts","fetchWalletBorrowNfts","walletPublicKey","limit","skip","_ref2","maxLoanValue","error","console","_ref4","_ref3","result","fetch","toBase58","json","_x","apply","arguments"],"sources":["/Users/ezekiel/Desktop/frakt/loans-xnft/src/hooks/useMaxBorrowValue.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { web3 } from '@frakt-protocol/frakt-sdk'\nimport { map, sum } from 'lodash'\n\nimport { useSolanaWallet } from './useWallet'\n\nexport const useMaxBorrowValue = () => {\n  const { publicKey } = useSolanaWallet()\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [maxBorrowValue, setMaxBorrowValue] = useState<number | null>(null)\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        setIsLoading(true)\n        const walletNfts = await fetchWalletBorrowNfts({\n          walletPublicKey: publicKey,\n          limit: 1000,\n          skip: 0,\n        })\n        const maxBorrowValue =\n          sum(map(walletNfts, ({ maxLoanValue }) => maxLoanValue)) / 1e9\n        setMaxBorrowValue(maxBorrowValue)\n      } catch (error) {\n        console.error(error)\n      } finally {\n        setIsLoading(false)\n      }\n    })()\n  }, [])\n\n  return {\n    maxBorrowValue: maxBorrowValue || null,\n    isLoading,\n  }\n}\n\nexport const fetchWalletBorrowNfts = async ({\n  walletPublicKey,\n  limit,\n  skip,\n}: {\n  walletPublicKey: web3.PublicKey\n  limit: number\n  skip: number\n}) => {\n  const result = await (\n    await fetch(\n      `https://api.frakt.xyz/nft/meta2/${walletPublicKey?.toBase58()}?limit=${limit}&skip=${skip}`\n    )\n  ).json()\n\n  return result\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,GAAG,EAAEC,GAAG,QAAQ,QAAQ;AAEjC,SAASC,eAAe;AAExB,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EACrC,IAAAC,gBAAA,GAAsBF,eAAe,EAAE;IAA/BG,SAAS,GAAAD,gBAAA,CAATC,SAAS;EAEjB,IAAAC,SAAA,GAAkCP,QAAQ,CAAU,KAAK,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAA4CZ,QAAQ,CAAgB,IAAI,CAAC;IAAAa,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAlEE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAExCd,SAAS,CAAC,YAAM;IACd;IAACiB,iBAAA,CAAC,aAAY;MACZ,IAAI;QACFL,YAAY,CAAC,IAAI,CAAC;QAClB,IAAMM,UAAU,SAASC,qBAAqB,CAAC;UAC7CC,eAAe,EAAEb,SAAS;UAC1Bc,KAAK,EAAE,IAAI;UACXC,IAAI,EAAE;QACR,CAAC,CAAC;QACF,IAAMP,eAAc,GAClBZ,GAAG,CAACD,GAAG,CAACgB,UAAU,EAAE,UAAAK,KAAA;UAAA,IAAGC,YAAY,GAAAD,KAAA,CAAZC,YAAY;UAAA,OAAOA,YAAY;QAAA,EAAC,CAAC,GAAG,GAAG;QAChER,iBAAiB,CAACD,eAAc,CAAC;MACnC,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,SAAS;QACRb,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLG,cAAc,EAAEA,cAAc,IAAI,IAAI;IACtCJ,SAAS,EAATA;EACF,CAAC;AACH,CAAC;AAED,OAAO,IAAMQ,qBAAqB;EAAA,IAAAQ,KAAA,GAAAV,iBAAA,CAAG,WAAAW,KAAA,EAQ/B;IAAA,IAPJR,eAAe,GAAAQ,KAAA,CAAfR,eAAe;MACfC,KAAK,GAAAO,KAAA,CAALP,KAAK;MACLC,IAAI,GAAAM,KAAA,CAAJN,IAAI;IAMJ,IAAMO,MAAM,SAAS,OACbC,KAAK,uCAC0BV,eAAe,oBAAfA,eAAe,CAAEW,QAAQ,EAAE,gBAAUV,KAAK,cAASC,IAAI,CAC3F,EACDU,IAAI,EAAE;IAER,OAAOH,MAAM;EACf,CAAC;EAAA,gBAhBYV,qBAAqBA,CAAAc,EAAA;IAAA,OAAAN,KAAA,CAAAO,KAAA,OAAAC,SAAA;EAAA;AAAA,GAgBjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}